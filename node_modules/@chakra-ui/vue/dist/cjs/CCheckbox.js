"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./index-60c8e38a.js");require("./internal-icons-94dfadf3.js"),require("@emotion/css");var i=require("./index-7fafe605.js"),t=require("./CBox.js"),s=require("./index-74285c40.js"),a=require("./CVisuallyHidden.js"),n=require("./CControlBox.js"),o=require("./checkbox.styles-549cbb69.js"),r={name:"CCheckbox",mixins:[e.createStyledAttrsMixin("CCheckbox")],model:{prop:"isChecked",event:"change"},props:{id:String,name:String,value:[String,Boolean],ariaLabel:String,ariaLabelledBy:String,variantColor:{type:String,default:"blue"},defaultIsChecked:Boolean,isChecked:{type:Boolean,default:!1},isFullWidth:Boolean,size:{type:String,default:"md"},isDisabled:Boolean,isInvalid:Boolean,isReadOnly:Boolean,isIndeterminate:Boolean,iconColor:i.StringArray,iconSize:{type:i.StringNumber,default:"10px"}},computed:{checkBoxStyles:function(){return o.useCheckboxStyle({color:this.variantColor,size:this.size,colorMode:this.colorMode})},componentStyles:function(){return{display:"inline-flex",verticalAlign:"top",alignItems:"center",width:this.isFullWidth?"full":void 0,cursor:this.isDisabled?"not-allowed":"pointer"}},_id:function(){return this.id||"checkbox-"+e.useId(4)}},created:function(){e.useVariantColorWarning(this.theme,"Checkbox",this.variantColor)},methods:{handleChange:function(e){this.$emit("change",!this.isChecked,e)}},render:function(e){var i=this.$slots.default;return e("label",{class:this.className,attrs:Object.assign({},{for:this._id},this.computedAttrs)},[e(a.default,{props:{as:"input"},domProps:{value:this.value,defaultChecked:this.isReadOnly?void 0:this.defaultIsChecked,checked:this.isReadOnly?this.isChecked:this.defaultIsChecked?void 0:this.isChecked},attrs:{name:this.name,type:"checkbox",id:this._id,"aria-label":this.ariaLabel,"aria-labelledby":this.ariaLabelledBy,disabled:this.isDisabled,readOnly:this.isReadOnly,"aria-readonly":this.isReadOnly,"aria-invalid":this.isInvalid,"aria-checked":this.isIndeterminate?"mixed":this.isChecked},on:{change:this.isReadOnly?void 0:this.handleChange}}),e(n.default,{attrs:Object.assign({},{opacity:this.isReadOnly?.8:1},this.checkBoxStyles)},[e(s.CIcon,{props:{name:this.isIndeterminate?"minus":"check",size:this.iconSize,color:this.iconColor,transition:"transform 240ms, opacity 240ms"}})]),i&&e(t.default,{attrs:{ml:2,fontSize:this.size,fontFamily:"body",userSelect:"none",opacity:this.isDisabled?.4:1}},i)])}};exports.default=r;
