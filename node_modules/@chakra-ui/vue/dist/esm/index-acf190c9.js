import{T as e}from"./index-31b72dba.js";import{i as t}from"./internal-icons-9ada1ec8.js";import{css as n}from"@emotion/css";var i={name:{type:[String,Array]},use:{type:[String,Array],required:!1},pack:{type:String,required:!1,default:"fas",validator:function(e){return e.match(/^(fas|fal|fad)$/)}},size:{type:[String,Number,Array],default:"1em"}},r=Object.freeze(["\n        flex-shrink: 0;\n        backface-visibility: hidden;\n        &:not(:root) {\n          overflow: hidden;\n        }\n      "]),s=t["question-outline"],o={name:"ChakraIconSvg",mixins:[e("ChakraIconSvg")],props:i,computed:{svgClassName:function(){return n(r)}},render:function(e){return e("svg",{class:[this.svgClassName,this.className],attrs:this.computedAttrs},this.$slots.default)}},a={name:"CIcon",mixins:[e("CIcon")],inject:["$chakraIcons"],computed:{icon:function(){var e;return this.name?e=this.$chakraIcons[this.name]:console.warn('[Chakra]: You need to provide the "name" or "use" prop to for the Icon component'),e||(e=s),e},viewBox:function(){return this.icon.viewBox||"0 0 24 24"}},props:i,render:function(e){return e(o,{class:this.className,attrs:Object.assign({},this.icon.attrs||{},{w:this.size,h:this.size,color:this.color,d:"inline-block",verticalAlign:"middle",viewBox:this.viewBox,role:"presentation",focusable:!1},this.computedAttrs),domProps:{innerHTML:this.icon.path}})}};export{a as C,i};
