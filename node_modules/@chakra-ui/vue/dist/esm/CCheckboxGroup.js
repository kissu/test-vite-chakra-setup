import{T as e,O as t,M as n,E as a,C as s}from"./index-31b72dba.js";import"@emotion/css";import{m as i}from"./index-82d14538.js";import o from"./CBox.js";var r={name:"CCheckboxGroup",mixins:[e("CCheckboxGroup")],model:{prop:"value",event:"change"},props:{name:String,variantColor:String,size:String,defaultValue:Array,isInline:Boolean,value:Array,spacing:{type:i,default:2}},data:function(){return{values:this.defaultValue||[]}},computed:{isControlled:function(){return t(this.value)},_values:function(){return this.isControlled?this.value:this.values},checkboxName:function(){return this.name||"checkbox-group-"+n()}},methods:{onChange:function(e,t){var n,a=t.target,s=a.checked,i=a.value;n=s?this._values.concat([i]):this._values.filter((function(e){return e!==i})),this.isControlled||(this.values=n),this.$emit("change",n)}},render:function(e){var t=this,n=a(this.$slots.default),i=n.map((function(a,i){var r=n.length===i+1,l=t.isInline?{mr:t.spacing}:{mb:t.spacing},u=s(a,{props:{size:t.size,variantColor:t.variantColor,name:t.checkboxName+"-"+i,isChecked:t._values.includes(a.componentOptions.propsData.value)},on:{change:t.onChange}},e);return e(o,{attrs:Object.assign({},{display:t.isInline?"inline-block":"block"},!r&&l)},[u])}));return e("div",{class:[this.className],attrs:Object.assign({},this.computedAttrs,{role:"group"})},i)}};export default r;
