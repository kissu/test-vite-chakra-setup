"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = _interopRequireDefault(require("vue"));

var _BreadstickManager = _interopRequireDefault(require("../BreadstickManager"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';
var PORTAL_ID = 'breadstick-kitchen';
var ROOT_ID = 'breadstick-chef';
var VM = typeof window !== 'undefined' && window.Vue ? window.Vue : _vue.default;
/**
 * @description Create Toast Portal
 * @returns {HTMLElement}
 */

function createPortal() {
  if (!isBrowser) {
    return;
  }

  var portalElement;
  var existingPortalElement = document.getElementById(PORTAL_ID);

  if (existingPortalElement) {
    portalElement = existingPortalElement;
  } else {
    var el = document.createElement('div');
    el.id = PORTAL_ID;
    el.className = 'Breadstick';

    if (document.body != null) {
      document.body.appendChild(el);
    }

    portalElement = el;
  } // Create toaster-kitchen root instance


  var root = document.createElement('div');
  root.id = ROOT_ID;
  portalElement.appendChild(root);
  return portalElement;
}

function createBreadstick(boundNotify) {
  new VM({
    el: "#".concat(ROOT_ID),
    render: function render(h) {
      return h(_BreadstickManager.default, {
        props: {
          notify: boundNotify
        }
      }, this.$slots.default);
    }
  }).$mount();
}
/**
 * Toaster returns breadstick instance
 */


var Breadstick = function Breadstick() {
  var _this = this;

  _classCallCheck(this, Breadstick);

  _defineProperty(this, "closeAll", function () {
    if (_this.removeAll) {
      _this.removeAll();
    }
  });

  _defineProperty(this, "bindNotify", function (fn, removeAll) {
    _this.createNotification = fn;
    _this.removeAll = removeAll;
  });

  _defineProperty(this, "notify", function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (_this.createNotification) {
      _this.createNotification(message, options);
    }
  });

  createPortal();
  createBreadstick(this.bindNotify);
};

var _default = Breadstick;
exports.default = _default;